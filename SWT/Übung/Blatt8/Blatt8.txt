Aufgeb 8 - 1


1. Erklären Sie die offensichtlichsten Unterschiede zwischen Komponenten, Entwurfsmuster und Architekturstilen.


Komponenten sind funktionale bestandteile einer Software. Sie dienen in der Softwareentwicklung dazu einen bestimmten funktionalen Teil einer Software zu abstrahieren. Eine komponente ist daher um ein bestimmtes Feature konzentriert, eine Anforderun, die sie leisten soll.
Entwurfsmuster hingegen sind immer wiederkehrende Muster. Sie stellen optimale Lösungen für immer wiederkehrende Probleme da. Sie sind, soweit möglich, unabhängig von dem eigentlichen zu lösenden Problem. 
Ein Architekturstil ist die größte Abstaktionsebene in der Softwareentwicklung. Der Architekturstil legt fest, wie einzelne Komponenten mit einander Interagieren und wie sie angeordnet sind, bzw. welche Komponenten es überhaupt gibt. 
Somit gilt: Komponenten wie Entwurfsmuster strukturieren einen Unterbereich einer zu entwickelnden Software. Dabei bezien sich Komponenten auf dei Funktion udn Entwurfsmuster auf die sprachlichen Mittel um diese zu ereichen. Die höhere Abstraktion liegt beim Architekturstil. Dieser Strukturier die gesamte Software.






2. Recherchieren Sie das Entwurfsmuster Einzelstück (engl. singleton) und entwerfen Sie drei Beispiele für seine Verwendung. Zu welcher Klasse der in der Vorlesung genannten Entwurfsmustertaxonomie (pattern taxonomy) gehört dieses Muster und warum? 


Das Einzelstück stellt sicher, dass von einer Klasse genau ein Objekt existiert. Ein Singleton ist meistens global verfügbar. 

Bsp 1: In einem webserver - Eine Klasse die eingehende http Anfragen an einen Pool von Threads verteilt, die diese beantworten.
Bsp 2: in einem einfachen Spiel - ine Klasse die den Spielzustand beschreibt
Bsp 3: in einer graphischen Bibliothek - eine Klasse die den Hardwarezugriff abstrahiert

Das Einzelstück gehört zur Kategorie der Erzeugungsmuster (creational patterns). Es verhindert, das naoch ein weiteres Objekt der selben Klasse erzeugt werden kann.






3. Charakterisieren und unterscheiden Sie die folgenden Entwurfsmuster: Stellvertreter (Proxy), Adapter (Adapter), Fassade (Facade), Brücke (Bridge).



Stellvertreter : Dieses Entwurfsmuster aus dem Bereich der Strukturmuster verschiebt die Kontrolle über ein Objekt auf eine Stellvertreterobjekt.

Adapter: Auch der Adapter ist ein Strukturmuster. Er stellt eine Möglichkeit da einer Klasse eine weitere Schnittstelle hinzuzufügen.

Fassade: Ebenfalls ein Strukturmuster. Es bietet eine einheitliche Schnittstelle zu einer Menge von Schnittstellen eines Unterteil der Software.

Brücke: Auch die Brücke ist ein Strukturmuster und dient zur Trennung der Implementierung von Schnittstellen. Hierdurch können beide unabhängig voneinander verändert werden.








Aufgeb 8 - 2

1. Überlegen Sie sich, welches der in der Vorlesung vorgestellten Entwurfsmuster (außer dem Singleton) Sie in Ihrer zu entwickelnden Software sinnvoll einsetzen können.

Das Fassaden Pattern könnte genutzt werden um den Zugriff auf die einzelnen Cocktail Rezepte zu abstrahieren. .  




2.Stellen Sie die Charakteristika des gewählten Entwurfsmusters heraus und begründen Sie, warum und wofür das Muster in Ihrem Kontext geeignet ist.

Die Fassade abstrahiert den Zugriff auf ein Subsystem, in diesem Fall die Datenquellen. Die Rezpte können aus der Online Datenbank Stammen die ebenfalls offline Repliziert werden könnte. Außerdem könnten in späteren Versionen auch noch aus anderen Quellen (www-suche, ect) Rezepte hinzugefügt werden. Dies ermöglicht der App eine größere Flexibilität. Hierfür ist das Pattern sinnvoll.





3. Stellen Sie das Entwurfsmuster in UML Notation dar.

file: fassade.png

4. Übertragen Sie die UML Notation des Entwurfsmusters in Ihren Kontext und stellen dieses ebenfalls als UML Diagramm dar.

file: DB.png

5. Implementieren Sie (in Java oder Pseudocode) in Ansätzen die Verwendung des Entwurfsmusters in Ihrem Kontext (notwendige Interfaces, Klassen, etc. mit jeweils relevanten Codestellen).


Eine kleine Version dieses Patterns findet sich in Fassade.zip.